@using TestBlazorServerApp.Components.Account
@using Application.Helpers.Runtime
@using Domain.Enums.Auth

@attribute [Route(AppRouteConstants.Account.Security)]

<MudContainer Class="d-flex pa-4 flex-column align-center">
    <AccountSettingsNavBar/>
</MudContainer>

<MudContainer>
    <MudGrid Class="pa-4 justify-center my-4 mud-text-align-center">
        <MudPaper Width="98%" Class="pa-4 mb-3">
            <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                <MudText Color="Color.Primary" Align="Align.Center" Typo="Typo.h5">Change Password</MudText>
            </MudItem>
            <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2">
                <MudTextField @bind-Value="CurrentPassword" Label="Current Password" Variant="Variant.Outlined" InputType="@_passwordCurrentInput"
                              Adornment="Adornment.End" AdornmentIcon="@_passwordCurrentInputIcon" OnAdornmentClick="@ToggleCurrentPasswordVisibility"
                              AdornmentAriaLabel="Show Current Password"/>
            </MudItem>
            <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2">
                <MudTextField @bind-Value="DesiredPassword" Label="Desired Password" Variant="Variant.Outlined" InputType="@_passwordInput"
                              Adornment="Adornment.End" AdornmentIcon="@_passwordInputIcon" OnAdornmentClick="@TogglePasswordVisibility"
                              AdornmentAriaLabel="Show Desired Password"/>
                <MudMenu Icon="@Icons.Material.Filled.QuestionMark" Color="Color.Inherit" Dense="true" Direction="Direction.Left" Size="Size.Medium">
                    <MudText Align="Align.Left" Class="mx-4">Minimum Length:     @_passwordRequirements.MinimumLength</MudText>
                    <MudText Align="Align.Left" Class="mx-4">Requires Special:   @_passwordRequirements.RequiresSpecialCharacters</MudText>
                    <MudText Align="Align.Left" Class="mx-4">Requires Lowercase: @_passwordRequirements.RequiresLowercase</MudText>
                    <MudText Align="Align.Left" Class="mx-4">Requires Uppercase: @_passwordRequirements.RequiresUppercase</MudText>
                    <MudText Align="Align.Left" Class="mx-4">Requires Numbers:   @_passwordRequirements.RequiresNumbers</MudText>
                </MudMenu>
            </MudItem>
            <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2">
                <MudTextField @bind-Value="ConfirmPassword" Label="Confirm Password" Variant="Variant.Outlined" InputType="@_passwordConfirmInput"
                              Adornment="Adornment.End" AdornmentIcon="@_passwordConfirmInputIcon" OnAdornmentClick="@ToggleConfirmPasswordVisibility"
                              AdornmentAriaLabel="Show Confirm Password"/>
            </MudItem>
            <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-4">
                <MudButton Variant="Variant.Outlined" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Save" 
                           OnClick="@UpdatePassword">Change Password
                </MudButton>
            </MudItem>
        </MudPaper>
        <MudPaper Width="98%" Class="pa-4 mb-3">
            <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                <MudText Color="Color.Primary" Align="Align.Center" Typo="Typo.h5">Multi-Factor Authentication (MFA)</MudText>
            </MudItem>
            @if (QrCodeGenerating)
            {
                <MudProgressLinear Color="Color.Info" Indeterminate="true" Rounded="true"/>
                <MudText Color="Color.Info" Align="Align.Center" Typo="Typo.h6">Generating QR Code...</MudText>
            }
            <MudItem xs="12" sm="12" md="12" Class="d-flex flex-wrap justify-center pa-2 gap-4">
                <MudButton Color="Color.Primary" OnClick="@(InvokeTotpAction)" Variant="Variant.Outlined">
                    @_mfaButtonText
                </MudButton>
                @if (!string.IsNullOrWhiteSpace(CurrentUser.TwoFactorKey))
                {
                    <MudButton Color="Color.Secondary" OnClick="@(RegisterTotp)" Variant="Variant.Outlined">
                        Re-register MFA TOTP Token
                    </MudButton>
                }
            </MudItem>
            @if (!string.IsNullOrWhiteSpace(_mfaRegisterCode))
            {
                <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2 gap-4">
                    <MudText Align="Align.Center" Typo="Typo.h5" Class="smaller">
                        Please scan the QR code or enter the TOTP key in your MFA app to register
                    </MudText>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2 gap-4">
                    <MudImage ObjectPosition="ObjectPosition.Center" ObjectFit="ObjectFit.Contain" Src="@_qrCodeImageSource" Fluid="true" Width="300"/>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2 gap-4">
                    <MudText Align="Align.Center" Typo="Typo.h6" Class="smaller">
                        TOTP Key: @(_mfaRegisterCode)
                    </MudText>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2 gap-4">
                    <MudTextField T="string" @bind-Value="_totpCode" Placeholder="TOTP Code" OnKeyDown="@(TotpSubmitCheck)" Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.Token" IconSize="Size.Medium" Class="mt-0"/>
                    <MudButton Color="Color.Tertiary" OnClick="@(ValidateTotpCode)" Size="Size.Medium" Variant="Variant.Outlined"
                               StartIcon="@Icons.Material.Filled.Verified">
                        Verify Code
                    </MudButton>
                </MudItem>
            }
        </MudPaper>
        @if (_canGenerateApiTokens)
        {
            <MudPaper Width="98%" Class="pa-4 mb-3">
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                    <MudText Color="Color.Primary" Align="Align.Center" Typo="Typo.h5">API Token</MudText>
                </MudItem>
                @* TODO: find spacing for these elements to get them aligned in the center & verify token generation *@
                <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36"
                         Class="d-flex flex-wrap pa-4 mb-3 gap-4 justify-center mud-text-align-center align-center">
                    <MudButton Class="d-flex flex-wrap pa-4 mb-3 gap-4 justify-center mud-text-align-center align-center" 
                        Color="Color.Primary" OnClick="@(GenerateUserApiToken)" Variant="Variant.Outlined">
                        @_apiTokenGenButtonText
                    </MudButton>
                    <MudSelect Class="d-flex flex-wrap pa-4 mb-3 gap-4 justify-center mud-text-align-center align-center" 
                        @bind-Value="_tokenTimeframe" Label="Token Lifetime" OpenIcon="@Icons.Material.Filled.Api" AdornmentColor="Color.Secondary">
                        @foreach (UserApiTokenTimeframe item in Enum.GetValues(typeof(UserApiTokenTimeframe)))
                        {
                            <MudSelectItem Value="@item">@item</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" Hover="true" Dense="true" Striped="true">
                    <MudTable Items="@_userApiTokens">
                        <HeaderContent>
                            <MudTh></MudTh>
                            <MudTh>Expiration</MudTh>
                            <MudTh>Token (Last 4)</MudTh>
                            <MudTh>Copy Token To Clipboard</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Icon"><MudIcon Color="Color.Tertiary" Icon="@Icons.Material.Filled.Api"/></MudTd>
                            <MudTd DataLabel="Name">@DateTime.Parse(context.Name).ConvertToLocal(_localTimeZone).ToLongTimeString()</MudTd>
                            <MudTd DataLabel="Value">@context.Value[^4..]</MudTd>
                            <MudTd DataLabel="Copy"><MudButton StartIcon="@Icons.Material.Filled.ContentCopy"
                                                               OnClick="@(() => CopyToClipboard(@context.Value))"/></MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudItem>
            </MudPaper>
        }
    </MudGrid>
</MudContainer>
