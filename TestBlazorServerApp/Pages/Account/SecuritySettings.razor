@using TestBlazorServerApp.Components.Account

@attribute [Route(AppRouteConstants.Account.Security)]

<MudContainer Class="d-flex pa-4 flex-column align-center">
    <AccountSettingsNavBar/>
</MudContainer>

<MudContainer>
    <MudGrid Class="pa-4 justify-center my-4 mud-text-align-center">
        <MudPaper Width="98%" Class="pa-4 mb-3">
            <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                <MudText Color="Color.Primary" Align="Align.Center" Typo="Typo.h5">Change Password</MudText>
            </MudItem>
            <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2">
                <MudTextField @bind-Value="CurrentPassword" Label="Current Password" Variant="Variant.Outlined" InputType="@_passwordCurrentInput"
                              Adornment="Adornment.End" AdornmentIcon="@_passwordCurrentInputIcon" OnAdornmentClick="@ToggleCurrentPasswordVisibility"
                              AdornmentAriaLabel="Show Current Password"/>
            </MudItem>
            <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2">
                <MudTextField @bind-Value="DesiredPassword" Label="Desired Password" Variant="Variant.Outlined" InputType="@_passwordInput"
                              Adornment="Adornment.End" AdornmentIcon="@_passwordInputIcon" OnAdornmentClick="@TogglePasswordVisibility"
                              AdornmentAriaLabel="Show Desired Password"/>
                @* TODO: Add realtime feedback on password meeting requirements *@
                <MudMenu Icon="@Icons.Filled.QuestionMark" Color="Color.Inherit" Dense="true" Direction="Direction.Left" Size="Size.Medium">
                    <MudText Align="Align.Left" Class="mx-4">Minimum Length:     @_passwordRequirements.MinimumLength</MudText>
                    <MudText Align="Align.Left" Class="mx-4">Requires Special:   @_passwordRequirements.RequiresSpecialCharacters</MudText>
                    <MudText Align="Align.Left" Class="mx-4">Requires Lowercase: @_passwordRequirements.RequiresLowercase</MudText>
                    <MudText Align="Align.Left" Class="mx-4">Requires Uppercase: @_passwordRequirements.RequiresUppercase</MudText>
                    <MudText Align="Align.Left" Class="mx-4">Requires Numbers:   @_passwordRequirements.RequiresNumbers</MudText>
                </MudMenu>
            </MudItem>
            <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2">
                <MudTextField @bind-Value="ConfirmPassword" Label="Confirm Password" Variant="Variant.Outlined" InputType="@_passwordConfirmInput"
                              Adornment="Adornment.End" AdornmentIcon="@_passwordConfirmInputIcon" OnAdornmentClick="@ToggleConfirmPasswordVisibility"
                              AdornmentAriaLabel="Show Confirm Password"/>
            </MudItem>
            <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-4">
                <MudButton Variant="Variant.Outlined" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Save" 
                           OnClick="@UpdatePassword">Change Password
                </MudButton>
            </MudItem>
        </MudPaper>
        <MudPaper Width="98%" Class="pa-4 mb-3">
            <MudItem xs="12" sm="12" md="12" lg="18" xl="24" xxl="36" Class="pa-2">
                <MudText Color="Color.Primary" Align="Align.Center" Typo="Typo.h5">Multi-Factor Authentication (MFA)</MudText>
            </MudItem>
            <MudProgressLinear Indeterminate="@_qrCodeGenerating" Rounded="true"/>
            <MudItem xs="12" sm="12" md="12" Class="d-flex flex-wrap justify-center pa-2 gap-4">
                <MudButton Color="Color.Primary" OnClick="@(InvokeTotpAction)" Variant="Variant.Outlined">
                    @_mfaButtonText
                </MudButton>
                @if (!string.IsNullOrWhiteSpace(CurrentUser.TwoFactorKey))
                {
                    <MudButton Color="Color.Secondary" OnClick="@(RegisterTotp)" Variant="Variant.Outlined">
                        Re-register MFA TOTP Token
                    </MudButton>
                }
            </MudItem>
            @if (!string.IsNullOrWhiteSpace(_mfaRegisterCode))
            {
                <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2 gap-4">
                    <MudText Align="Align.Center" Typo="Typo.h5" Class="smaller">
                        Please scan the QR code or enter the TOTP key in your MFA app to register
                    </MudText>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2 gap-4">
                    <MudImage ObjectPosition="ObjectPosition.Center" ObjectFit="ObjectFit.Contain" Src="@_qrCodeImageSource" Fluid="true" Width="500"/>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2 gap-4">
                    <MudText Align="Align.Center" Typo="Typo.h6" Class="smaller">
                        TOTP Key: @(_mfaRegisterCode)
                    </MudText>
                </MudItem>
                <MudItem xs="12" sm="12" md="12" Class="d-flex justify-center pa-2 gap-4">
                    <MudTextField T="string" @bind-Value="_totpCode" Placeholder="TOTP Code" Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.Token" IconSize="Size.Medium" Class="mt-0"/>
                    <MudButton Color="Color.Tertiary" OnClick="@(ValidateTotpCode)" Variant="Variant.Outlined">
                        <MudIcon Icon="@Icons.Material.Filled.Verified"/>
                    </MudButton>
                </MudItem>
            }
        </MudPaper>
    </MudGrid>
</MudContainer>
